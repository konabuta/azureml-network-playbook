{"ast":null,"code":"import _possibleConstructorReturn from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _objectWithoutProperties from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { getUserAgent } from 'universal-user-agent';\nimport { Collection } from 'before-after-hook';\nimport { request } from '@octokit/request';\nimport { withCustomRequest } from '@octokit/graphql';\nimport { createTokenAuth } from '@octokit/auth-token';\nvar VERSION = \"3.2.5\";\n\nvar Octokit = /*#__PURE__*/function () {\n  function Octokit() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Octokit);\n\n    var hook = new Collection();\n    var requestDefaults = {\n      baseUrl: request.endpoint.DEFAULTS.baseUrl,\n      headers: {},\n      request: Object.assign({}, options.request, {\n        hook: hook.bind(null, \"request\")\n      }),\n      mediaType: {\n        previews: [],\n        format: \"\"\n      }\n    }; // prepend default user agent with `options.userAgent` if set\n\n    requestDefaults.headers[\"user-agent\"] = [options.userAgent, \"octokit-core.js/\".concat(VERSION, \" \").concat(getUserAgent())].filter(Boolean).join(\" \");\n\n    if (options.baseUrl) {\n      requestDefaults.baseUrl = options.baseUrl;\n    }\n\n    if (options.previews) {\n      requestDefaults.mediaType.previews = options.previews;\n    }\n\n    if (options.timeZone) {\n      requestDefaults.headers[\"time-zone\"] = options.timeZone;\n    }\n\n    this.request = request.defaults(requestDefaults);\n    this.graphql = withCustomRequest(this.request).defaults(requestDefaults);\n    this.log = Object.assign({\n      debug: function debug() {},\n      info: function info() {},\n      warn: console.warn.bind(console),\n      error: console.error.bind(console)\n    }, options.log);\n    this.hook = hook; // (1) If neither `options.authStrategy` nor `options.auth` are set, the `octokit` instance\n    //     is unauthenticated. The `this.auth()` method is a no-op and no request hook is registered.\n    // (2) If only `options.auth` is set, use the default token authentication strategy.\n    // (3) If `options.authStrategy` is set then use it and pass in `options.auth`. Always pass own request as many strategies accept a custom request instance.\n    // TODO: type `options.auth` based on `options.authStrategy`.\n\n    if (!options.authStrategy) {\n      if (!options.auth) {\n        // (1)\n        this.auth = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  return _context.abrupt(\"return\", {\n                    type: \"unauthenticated\"\n                  });\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n      } else {\n        // (2)\n        var auth = createTokenAuth(options.auth); // @ts-ignore  ¯\\_(ツ)_/¯\n\n        hook.wrap(\"request\", auth.hook);\n        this.auth = auth;\n      }\n    } else {\n      var authStrategy = options.authStrategy,\n          otherOptions = _objectWithoutProperties(options, [\"authStrategy\"]);\n\n      var _auth = authStrategy(Object.assign({\n        request: this.request,\n        log: this.log,\n        // we pass the current octokit instance as well as its constructor options\n        // to allow for authentication strategies that return a new octokit instance\n        // that shares the same internal state as the current one. The original\n        // requirement for this was the \"event-octokit\" authentication strategy\n        // of https://github.com/probot/octokit-auth-probot.\n        octokit: this,\n        octokitOptions: otherOptions\n      }, options.auth)); // @ts-ignore  ¯\\_(ツ)_/¯\n\n\n      hook.wrap(\"request\", _auth.hook);\n      this.auth = _auth;\n    } // apply plugins\n    // https://stackoverflow.com/a/16345172\n\n\n    var classConstructor = this.constructor;\n    classConstructor.plugins.forEach(function (plugin) {\n      Object.assign(_this, plugin(_this, options));\n    });\n  }\n\n  _createClass(Octokit, null, [{\n    key: \"defaults\",\n    value: function defaults(_defaults) {\n      var OctokitWithDefaults = /*#__PURE__*/function (_this2) {\n        _inherits(OctokitWithDefaults, _this2);\n\n        var _super = _createSuper(OctokitWithDefaults);\n\n        function OctokitWithDefaults() {\n          var _this3;\n\n          _classCallCheck(this, OctokitWithDefaults);\n\n          var options = (arguments.length <= 0 ? undefined : arguments[0]) || {};\n\n          if (typeof _defaults === \"function\") {\n            _this3 = _super.call(this, _defaults(options));\n            return _possibleConstructorReturn(_this3);\n          }\n\n          return _super.call(this, Object.assign({}, _defaults, options, options.userAgent && _defaults.userAgent ? {\n            userAgent: \"\".concat(options.userAgent, \" \").concat(_defaults.userAgent)\n          } : null));\n        }\n\n        return OctokitWithDefaults;\n      }(this);\n\n      return OctokitWithDefaults;\n    }\n    /**\n     * Attach a plugin (or many) to your Octokit instance.\n     *\n     * @example\n     * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)\n     */\n\n  }, {\n    key: \"plugin\",\n    value: function plugin() {\n      var _a;\n\n      var currentPlugins = this.plugins;\n\n      for (var _len = arguments.length, newPlugins = new Array(_len), _key = 0; _key < _len; _key++) {\n        newPlugins[_key] = arguments[_key];\n      }\n\n      var NewOctokit = (_a = /*#__PURE__*/function (_this4) {\n        _inherits(_a, _this4);\n\n        var _super2 = _createSuper(_a);\n\n        function _a() {\n          _classCallCheck(this, _a);\n\n          return _super2.apply(this, arguments);\n        }\n\n        return _a;\n      }(this), _a.plugins = currentPlugins.concat(newPlugins.filter(function (plugin) {\n        return !currentPlugins.includes(plugin);\n      })), _a);\n      return NewOctokit;\n    }\n  }]);\n\n  return Octokit;\n}();\n\nOctokit.VERSION = VERSION;\nOctokit.plugins = [];\nexport { Octokit };","map":{"version":3,"sources":["../dist-src/version.js","../dist-src/index.js"],"names":[],"mappings":"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","sourcesContent":["export const VERSION = \"3.2.5\";\n","import { getUserAgent } from \"universal-user-agent\";\nimport { Collection } from \"before-after-hook\";\nimport { request } from \"@octokit/request\";\nimport { withCustomRequest } from \"@octokit/graphql\";\nimport { createTokenAuth } from \"@octokit/auth-token\";\nimport { VERSION } from \"./version\";\nexport class Octokit {\n    constructor(options = {}) {\n        const hook = new Collection();\n        const requestDefaults = {\n            baseUrl: request.endpoint.DEFAULTS.baseUrl,\n            headers: {},\n            request: Object.assign({}, options.request, {\n                hook: hook.bind(null, \"request\"),\n            }),\n            mediaType: {\n                previews: [],\n                format: \"\",\n            },\n        };\n        // prepend default user agent with `options.userAgent` if set\n        requestDefaults.headers[\"user-agent\"] = [\n            options.userAgent,\n            `octokit-core.js/${VERSION} ${getUserAgent()}`,\n        ]\n            .filter(Boolean)\n            .join(\" \");\n        if (options.baseUrl) {\n            requestDefaults.baseUrl = options.baseUrl;\n        }\n        if (options.previews) {\n            requestDefaults.mediaType.previews = options.previews;\n        }\n        if (options.timeZone) {\n            requestDefaults.headers[\"time-zone\"] = options.timeZone;\n        }\n        this.request = request.defaults(requestDefaults);\n        this.graphql = withCustomRequest(this.request).defaults(requestDefaults);\n        this.log = Object.assign({\n            debug: () => { },\n            info: () => { },\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n        }, options.log);\n        this.hook = hook;\n        // (1) If neither `options.authStrategy` nor `options.auth` are set, the `octokit` instance\n        //     is unauthenticated. The `this.auth()` method is a no-op and no request hook is registered.\n        // (2) If only `options.auth` is set, use the default token authentication strategy.\n        // (3) If `options.authStrategy` is set then use it and pass in `options.auth`. Always pass own request as many strategies accept a custom request instance.\n        // TODO: type `options.auth` based on `options.authStrategy`.\n        if (!options.authStrategy) {\n            if (!options.auth) {\n                // (1)\n                this.auth = async () => ({\n                    type: \"unauthenticated\",\n                });\n            }\n            else {\n                // (2)\n                const auth = createTokenAuth(options.auth);\n                // @ts-ignore  ¯\\_(ツ)_/¯\n                hook.wrap(\"request\", auth.hook);\n                this.auth = auth;\n            }\n        }\n        else {\n            const { authStrategy, ...otherOptions } = options;\n            const auth = authStrategy(Object.assign({\n                request: this.request,\n                log: this.log,\n                // we pass the current octokit instance as well as its constructor options\n                // to allow for authentication strategies that return a new octokit instance\n                // that shares the same internal state as the current one. The original\n                // requirement for this was the \"event-octokit\" authentication strategy\n                // of https://github.com/probot/octokit-auth-probot.\n                octokit: this,\n                octokitOptions: otherOptions,\n            }, options.auth));\n            // @ts-ignore  ¯\\_(ツ)_/¯\n            hook.wrap(\"request\", auth.hook);\n            this.auth = auth;\n        }\n        // apply plugins\n        // https://stackoverflow.com/a/16345172\n        const classConstructor = this.constructor;\n        classConstructor.plugins.forEach((plugin) => {\n            Object.assign(this, plugin(this, options));\n        });\n    }\n    static defaults(defaults) {\n        const OctokitWithDefaults = class extends this {\n            constructor(...args) {\n                const options = args[0] || {};\n                if (typeof defaults === \"function\") {\n                    super(defaults(options));\n                    return;\n                }\n                super(Object.assign({}, defaults, options, options.userAgent && defaults.userAgent\n                    ? {\n                        userAgent: `${options.userAgent} ${defaults.userAgent}`,\n                    }\n                    : null));\n            }\n        };\n        return OctokitWithDefaults;\n    }\n    /**\n     * Attach a plugin (or many) to your Octokit instance.\n     *\n     * @example\n     * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)\n     */\n    static plugin(...newPlugins) {\n        var _a;\n        const currentPlugins = this.plugins;\n        const NewOctokit = (_a = class extends this {\n            },\n            _a.plugins = currentPlugins.concat(newPlugins.filter((plugin) => !currentPlugins.includes(plugin))),\n            _a);\n        return NewOctokit;\n    }\n}\nOctokit.VERSION = VERSION;\nOctokit.plugins = [];\n"]},"metadata":{},"sourceType":"module"}