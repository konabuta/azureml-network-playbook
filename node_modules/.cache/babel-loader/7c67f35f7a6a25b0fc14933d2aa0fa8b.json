{"ast":null,"code":"var _jsxFileName = \"/Users/keonabut/code/azureml-network-playbook/src/App.tsx\",\n    _s = $RefreshSig$();\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// The App component is the top-level component of the application.\n// This component manages the state of the survey and determines\n// which page to show based on the status of the survey.\nimport React, { useEffect, useState } from 'react';\nimport { Survey } from 'survey-react';\nimport Intro from './components/Intro';\nimport TaskList from './components/TaskList';\nimport CategoryTags from './components/CategoryTags';\nimport { TaskCard } from './models/Types';\nimport GithubExportForm from './components/GithubExportForm';\nimport ExportDialog from './components/ExportDialog';\nimport LinkDialog from './components/LinkDialog';\nimport { BsArrowCounterclockwise, BsChevronLeft, BsChevronRight } from 'react-icons/bs';\nimport { saveAs } from 'file-saver';\nimport { getCategorySectionId, isNullOrEmpty } from './util/Utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Captures the survey model object after the page renders\n// Exposes some encapsulated state needed for undo functionality\nexport let surveyModel; // SurveyJS will re-render its component when pages are changed or when the\n// app switches from mobile to desktop view. Some things need to only happen\n// on the first render.\n\nlet isFirstRender = true;\nlet isDeserializing = false;\nlet autoscroll = true;\n\nfunction createTaskMap(contentData) {\n  var _surveyModel$getAllQu, _surveyModel;\n\n  const questions = (_surveyModel$getAllQu = (_surveyModel = surveyModel) === null || _surveyModel === void 0 ? void 0 : _surveyModel.getAllQuestions()) !== null && _surveyModel$getAllQu !== void 0 ? _surveyModel$getAllQu : [];\n  const taskMap = new Map();\n  questions.forEach(q => {\n    const tc = TaskCard.fromQuestionChoice(q.name, q.value);\n\n    if (tc != null) {\n      var _contentData$question;\n\n      const category = (_contentData$question = contentData.questions.find(cq => cq.name === q.name)) === null || _contentData$question === void 0 ? void 0 : _contentData$question.category;\n      let categoryTasks = taskMap.get(category);\n\n      if (categoryTasks) {\n        const filtered = categoryTasks.filter(t => t.question !== q.name);\n        filtered.push(tc);\n        categoryTasks = filtered;\n      } else {\n        categoryTasks = [tc];\n      }\n\n      taskMap.set(category, categoryTasks);\n    }\n  });\n  return taskMap;\n}\n\nfunction isWideScreen() {\n  return window.innerWidth > 425;\n} // Switches the survey to multi-page or single-page format\n// eslint-disable-next-line\n\n\nfunction arrangeSurveyPages(surveyData, isMobileLayout) {\n  const surveyQuestions = [];\n\n  for (let i = 0; i < ((_surveyData$pages = surveyData.pages) === null || _surveyData$pages === void 0 ? void 0 : _surveyData$pages.length); i++) {\n    var _surveyData$pages;\n\n    const page = surveyData.pages[i];\n\n    for (let j = 0; j < ((_page$elements = page.elements) === null || _page$elements === void 0 ? void 0 : _page$elements.length); j++) {\n      var _page$elements;\n\n      surveyQuestions.push(page.elements[j]);\n    }\n  }\n\n  surveyData.pages = [];\n\n  if (isMobileLayout) {\n    // Split the survey into multiple pages\n    for (let q of surveyQuestions) {\n      surveyData.pages.push({\n        elements: [q]\n      });\n    }\n  } else {\n    // Combine all pages into 1 page\n    surveyData.pages.push({\n      elements: surveyQuestions\n    });\n  }\n\n  return surveyData;\n} // vertically align the button row with the category tags row\n\n\nfunction adjustVerticalAlignment() {\n  const categoryDiv = document.getElementById(\"category-container\");\n  const buttonDiv = document.getElementById(\"survey-buttons\");\n\n  if (categoryDiv && buttonDiv) {\n    var _buttonDiv$style$padd;\n\n    if (isNullOrEmpty(categoryDiv.style.minHeight)) {\n      categoryDiv.style.minHeight = `${buttonDiv.clientHeight}px`;\n    }\n\n    const heightDiff = categoryDiv.clientHeight - buttonDiv.clientHeight; // parse the padding - it will be in format of \"5px\"\n\n    const matches = (_buttonDiv$style$padd = buttonDiv.style.paddingBottom) === null || _buttonDiv$style$padd === void 0 ? void 0 : _buttonDiv$style$padd.match(/[0-9]+/);\n    const pb = matches == null ? 0 : parseInt(matches[0]);\n\n    if (heightDiff !== 0) {\n      buttonDiv.style.paddingBottom = `${pb + heightDiff}px`;\n    }\n  }\n}\n\nconst App = ({\n  surveyData,\n  contentData\n}) => {\n  _s();\n\n  var _contentData$surveyIn, _contentData$surveyIn2, _contentData$taskInst, _contentData$taskInst2;\n\n  const [showIntro, setShowIntro] = useState(true);\n  const [showSurvey, setShowSurvey] = useState(true);\n  const [undoStack, setUndoStack] = useState(new Array());\n  const [showExportForm, setShowExportForm] = useState(false);\n  const [showLinkDialog, setShowLinkDialog] = useState(false);\n  const [showGithubForm, setShowGithubForm] = useState(false);\n  const [isHighContrast, setHighContrast] = useState(false);\n  const [isMobileLayout, setMobileLayout] = useState(!isWideScreen());\n  console.log(\"STATE: showIntro=\", showIntro, \" showSurvey=\", showSurvey, \" isMobileLayout=\", isMobileLayout, \" isHighContrast=\", isHighContrast); //surveyData = arrangeSurveyPages(surveyData, isMobileLayout);\n\n  const deserializeState = state => {\n    console.log(\"Deserializing state: \", state);\n    let regex = /^[0-9x]*$/g;\n\n    if (!regex.test(state)) {\n      console.error(\"Unsupported state string: \", state);\n      return;\n    }\n\n    const questions = surveyModel.getAllQuestions();\n\n    if (state.length !== questions.length) {\n      console.error(\"State string length != number of questions\");\n      return;\n    }\n\n    const valueMap = new Map();\n    let numQuestions = 0;\n    isDeserializing = true;\n\n    for (let i = 0; i < ((_surveyData$pages2 = surveyData.pages) === null || _surveyData$pages2 === void 0 ? void 0 : _surveyData$pages2.length); i++) {\n      var _surveyData$pages2;\n\n      const page = surveyData.pages[i];\n\n      for (let j = 0; j < ((_page$elements2 = page.elements) === null || _page$elements2 === void 0 ? void 0 : _page$elements2.length); j++) {\n        var _page$elements2, _page$elements$j$choi;\n\n        numQuestions++;\n\n        if (numQuestions > state.length) {\n          console.error(\"survey.json contains more questions than state\");\n          isDeserializing = false;\n          return;\n        }\n\n        if (state.charAt(j) === \"x\") {\n          continue;\n        }\n\n        const choiceIx = parseInt(state.charAt(j));\n        const value = (_page$elements$j$choi = page.elements[j].choices[choiceIx]) === null || _page$elements$j$choi === void 0 ? void 0 : _page$elements$j$choi.value;\n        const questionName = page.elements[j].name;\n\n        if (value) {\n          valueMap.set(questionName, value);\n        } else {\n          console.error(`Choice not found for state index=${j}`);\n          isDeserializing = false;\n          return;\n        }\n      }\n    }\n\n    questions.forEach(q => {\n      q.value = valueMap.get(q.name);\n    });\n\n    if (isFirstRender) {\n      // Set the undo stack up if the page is loading from a saved state\n      let valueMap = new Map();\n      let firstUndoStack = [];\n      questions.forEach(q => {\n        if (q.value) {\n          valueMap = new Map(valueMap);\n          valueMap.set(q.name, q.value);\n          firstUndoStack = [...firstUndoStack, valueMap];\n        }\n      });\n      setUndoStack(firstUndoStack);\n    }\n\n    isDeserializing = false;\n    console.log(\"Deserialization successful\", valueMap);\n  };\n\n  const serializeState = () => {\n    if (surveyModel == null) {\n      console.log(\"Can't serialize: surveyModel is undefined\");\n      return \"\";\n    } // Values is a map of {questionName: questionValue}\n\n\n    const values = surveyModel.getAllValues();\n    let serialized = \"\";\n\n    for (let i = 0; i < ((_surveyData$pages3 = surveyData.pages) === null || _surveyData$pages3 === void 0 ? void 0 : _surveyData$pages3.length); i++) {\n      var _surveyData$pages3;\n\n      let page = surveyData.pages[i];\n\n      for (let j = 0; j < ((_page$elements3 = page.elements) === null || _page$elements3 === void 0 ? void 0 : _page$elements3.length); j++) {\n        var _page$elements3;\n\n        let choices = page.elements[j].choices;\n        let questionName = page.elements[j].name;\n        let found = false;\n\n        for (let k = 0; k < (choices === null || choices === void 0 ? void 0 : choices.length) && !found; k++) {\n          if (values[questionName] === choices[k].value) {\n            serialized += k;\n            found = true;\n          }\n        }\n\n        if (!found) {\n          serialized += \"x\";\n        }\n      }\n    }\n\n    console.log(\"Serialized state: \", serialized);\n    return serialized;\n  };\n\n  const handleAfterRender = (sender, options) => {\n    console.log(\"AfterRender\", sender, options);\n    surveyModel = sender;\n    const urlParams = new URLSearchParams(window.location.search);\n    const state = urlParams.get('state');\n\n    if (state) {\n      deserializeState(state);\n    }\n\n    isFirstRender = false;\n  };\n\n  const handleValueChanged = (sender, options) => {\n    if (isDeserializing) {\n      return;\n    }\n\n    console.log(\"ValueChanged\", sender, options);\n    const questions = sender.getAllQuestions();\n    const valueMap = new Map();\n    questions.forEach(q => {\n      // Clear answers from invisible questions\n      // Questions can become invisible when the user changes a previous selection\n      if (!q.isVisible) {\n        q.clearValue();\n      }\n\n      valueMap.set(q.name, q.value);\n    });\n    setUndoStack([...undoStack, valueMap]);\n    const url = new URL(window.location.toString());\n    url.searchParams.set(\"state\", serializeState());\n    window.history.replaceState({}, '', url.toString());\n    const countPreview = document.getElementById(\"scenario-count-preview\");\n\n    if (countPreview) {\n      countPreview.classList.add(\"pulse-animation\");\n      setTimeout(() => {\n        countPreview.classList.remove(\"pulse-animation\");\n      }, 1500);\n    }\n  };\n\n  const handleUndo = () => {\n    if (surveyModel == null) {\n      console.log(\"Can't undo: surveyModel is undefined\");\n      return;\n    }\n\n    const questions = surveyModel.getAllQuestions();\n    questions.forEach(q => {\n      q.clearValue();\n    });\n\n    if (undoStack.length > 1) {\n      // The last thing pushed on the stack is the current state\n      // We need to pop it off first to get the old state\n      undoStack.pop();\n      const oldState = undoStack[undoStack.length - 1];\n      questions.forEach(q => {\n        q.value = oldState === null || oldState === void 0 ? void 0 : oldState.get(q.name);\n      });\n      setUndoStack([...undoStack]);\n    } else {\n      setUndoStack([]);\n    }\n  };\n\n  const handleClear = () => {\n    if (surveyModel == null) {\n      console.log(\"Can't clear: surveyModel is undefined\");\n      return;\n    }\n\n    const questions = surveyModel.getAllQuestions();\n    questions.forEach(q => {\n      q.clearValue();\n    });\n  };\n\n  const handleCategoryClick = category => {\n    const categorySection = document.getElementById(getCategorySectionId(category));\n\n    if (categorySection) {\n      categorySection.scrollIntoView(true);\n      categorySection.focus();\n    }\n  };\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n\n  useEffect(() => {\n    if (showIntro) return; // Detect high contrast mode by checking if the background color has been modified\n\n    if (!isHighContrast) {\n      const leftColumnBg = window.getComputedStyle(document.getElementsByClassName(\"title-bar\")[0], null).getPropertyValue('background-color');\n\n      if (leftColumnBg !== \"rgb(0, 27, 46)\") {\n        setHighContrast(true);\n      }\n    } // Resize the page to fill the screen vertically\n\n\n    const titleBar = document.getElementById(\"title-bar\");\n\n    if (isMobileLayout) {\n      const viewScenariosBar = document.getElementById(\"view-scenarios-bar\");\n      const surveyContainer = document.getElementById(\"survey-container\");\n\n      if (surveyContainer) {\n        if (viewScenariosBar) {\n          surveyContainer.style.height = `calc(100vh - ${titleBar === null || titleBar === void 0 ? void 0 : titleBar.offsetHeight}px - ${viewScenariosBar === null || viewScenariosBar === void 0 ? void 0 : viewScenariosBar.offsetHeight}px)`;\n        } else {\n          surveyContainer.style.height = `calc(100vh - ${titleBar === null || titleBar === void 0 ? void 0 : titleBar.offsetHeight}px)`;\n        }\n      }\n\n      const scenarioContainer = document.getElementById(\"scenario-header-container\");\n\n      if (scenarioContainer) {\n        scenarioContainer.style.height = \"\";\n      }\n    } else {\n      const footer = document.getElementById(\"footer\");\n      const grid = document.getElementById(\"two-column-grid\");\n\n      if (grid) {\n        grid.style.height = `calc(100vh - ${footer === null || footer === void 0 ? void 0 : footer.offsetHeight}px - ${titleBar === null || titleBar === void 0 ? void 0 : titleBar.offsetHeight}px)`;\n      }\n\n      adjustVerticalAlignment();\n    } // Auto-scroll when the user selects a choice\n\n\n    if (autoscroll) {\n      const svRows = document.getElementsByClassName(\"sv_row\");\n\n      if (svRows.length > 0) {\n        svRows[svRows.length - 1].scrollIntoView(true);\n      }\n    }\n\n    const handleResize = () => {\n      if (isMobileLayout && isWideScreen()) {\n        console.log(\"Switching to desktop layout\");\n        setMobileLayout(false);\n      } else if (!isMobileLayout && !isWideScreen()) {\n        console.log(\"Switching to mobile layout\");\n        setMobileLayout(true);\n      } else if (!isMobileLayout) {\n        adjustVerticalAlignment();\n      }\n    };\n\n    const handleKeyPress = () => {\n      autoscroll = false;\n    };\n\n    const handleMouseClick = () => {\n      autoscroll = true;\n    };\n\n    window.addEventListener('resize', handleResize);\n    document.addEventListener('keypress', handleKeyPress);\n    document.addEventListener('mousedown', handleMouseClick);\n    return function cleanup() {\n      window.removeEventListener('resize', handleResize);\n      document.removeEventListener('keypress', handleKeyPress);\n      document.removeEventListener('mousedown', handleMouseClick);\n    };\n  });\n\n  if (showIntro) {\n    // Only show intro page if introduction message is defined\n    const data = contentData;\n\n    if (data.introduction == null || data.introduction.length === 0) {\n      setShowIntro(false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Intro, {\n          introduction: data.introduction,\n          onStartClick: () => setShowIntro(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  const taskMap = createTaskMap(contentData);\n  const instructionHeader = (_contentData$surveyIn = contentData.surveyInstructions) === null || _contentData$surveyIn === void 0 ? void 0 : _contentData$surveyIn.title;\n  const instructionsMsg = (_contentData$surveyIn2 = contentData.surveyInstructions) === null || _contentData$surveyIn2 === void 0 ? void 0 : _contentData$surveyIn2.message;\n  const scenarioHeader = (_contentData$taskInst = contentData.taskInstructions) === null || _contentData$taskInst === void 0 ? void 0 : _contentData$taskInst.title;\n  const scenarioMsg = (_contentData$taskInst2 = contentData.taskInstructions) === null || _contentData$taskInst2 === void 0 ? void 0 : _contentData$taskInst2.message;\n  const categories = Array.from(taskMap.keys());\n  const highContrastBorder = isHighContrast ? \"solid white 1px\" : \"\";\n  const numTasks = categories.length === 0 ? 0 : categories.map(category => {\n    var _taskMap$get;\n\n    return TaskCard.filterTasks((_taskMap$get = taskMap.get(category)) !== null && _taskMap$get !== void 0 ? _taskMap$get : []);\n  }).flat().map(card => card.tasks).map(tasks => tasks.length).reduce((prev, n) => prev + n);\n\n  const handleAdoExport = () => {\n    let csv = \"Work Item Type,Title,Description\\n\";\n\n    for (const category of categories) {\n      var _taskMap$get2;\n\n      const taskCards = (_taskMap$get2 = taskMap.get(category)) !== null && _taskMap$get2 !== void 0 ? _taskMap$get2 : [];\n\n      for (const card of taskCards) {\n        for (const task of card.tasks) {\n          // In CSV, quotation marks are escaped with 2 quotation marks\n          // e.g. \"Hello World\" => \"\"Hello World\"\"\n          const name = task.name.replaceAll(/\"/g, \"\\\"\\\"\");\n          const details = task.details.replaceAll(/\"/g, \"\\\"\\\"\");\n          csv += `\"Issue\",\"${category}: ${name}\",\"${details}\"\\n`;\n        }\n      }\n    }\n\n    const blob = new Blob([csv], {\n      type: \"text/csv\"\n    });\n    saveAs(blob, \"azureDevOps.csv\");\n  };\n\n  if (isMobileLayout) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showSurvey ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"title-bar\",\n          className: \"title-bar\",\n          style: {\n            borderBottom: highContrastBorder\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            role: \"banner\",\n            className: \"title-bar-text\",\n            children: \"Network Playbook for Azure Machine Learning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"survey-buttons\",\n            style: {\n              marginLeft: \"auto\"\n            },\n            className: \"d-flex justify-content-end\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              \"aria-label\": \"Restart\",\n              onClick: handleClear,\n              className: \"blue-button\",\n              children: \"Restart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              \"aria-label\": \"Undo\",\n              onClick: handleUndo,\n              disabled: undoStack.length === 0,\n              className: \"blue-button ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(BsArrowCounterclockwise, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 127\n              }, this), \" Undo\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this), numTasks > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowSurvey(false),\n          className: \"view-scenarios-bar\",\n          id: \"view-scenarios-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"white\"\n            },\n            children: \"View testing scenarios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle-text circle-text-large\",\n            id: \"scenario-count-preview\",\n            style: {\n              border: highContrastBorder\n            },\n            children: numTasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BsChevronRight, {\n            color: isHighContrast ? \"#FFFFFF\" : \"#708491\",\n            style: {\n              marginLeft: \"auto\",\n              fontSize: \"24px\",\n              paddingRight: \"2%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-column scroll-pane\",\n          id: \"survey-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column-header\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                paddingLeft: \"4%\",\n                paddingTop: \"16px\",\n                fontSize: \"22px\",\n                lineHeight: \"26px\",\n                color: \"#ACDEFB\"\n              },\n              children: instructionHeader\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Survey, {\n            json: surveyData,\n            onAfterRenderPage: handleAfterRender,\n            onValueChanged: handleValueChanged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"title-bar\",\n          className: \"title-bar\",\n          style: {\n            borderBottom: highContrastBorder\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            role: \"banner\",\n            className: \"title-bar-text\",\n            children: \"HAX Playbook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"auto\"\n            },\n            className: \"d-flex justify-content-end\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              \"aria-label\": \"Export\",\n              onClick: () => {\n                setShowExportForm(true);\n              },\n              className: \"blue-button\",\n              children: \"Export\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ExportDialog, {\n              show: showExportForm,\n              onClose: () => setShowExportForm(false),\n              onCsvExport: handleAdoExport,\n              onGithubExport: () => setShowGithubForm(true),\n              onPdfExport: () => window.print(),\n              onLinkExport: () => setShowLinkDialog(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LinkDialog, {\n              show: showLinkDialog,\n              onClose: () => setShowLinkDialog(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GithubExportForm, {\n              taskMap: taskMap,\n              numTasks: numTasks,\n              showForm: showGithubForm,\n              onClose: () => setShowGithubForm(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowSurvey(true),\n          className: \"back-bar\",\n          style: {\n            border: isHighContrast ? \"solid white 1px\" : \"\",\n            marginLeft: \"15px\",\n            padding: \"10px 0px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(BsChevronLeft, {\n            color: isHighContrast ? \"#FFFFFF\" : \"#004578\",\n            style: {\n              fontSize: \"18px\",\n              marginBottom: \"2px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline-block\",\n              marginLeft: \"5px\"\n            },\n            children: \"Back to survey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column d-flex flex-row align-items-center\",\n          id: \"scenario-header-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 column-header\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"22px\",\n                color: \"#004578\",\n                fontWeight: \"bold\"\n              },\n              children: scenarioHeader\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column pb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"14px\",\n              border: highContrastBorder\n            },\n            children: \"Total scenarios:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle-text circle-text-large\",\n            style: {\n              border: highContrastBorder\n            },\n            children: numTasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column\",\n          children: scenarioMsg != null && scenarioMsg.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 normal-text\",\n            dangerouslySetInnerHTML: {\n              __html: instructionsMsg\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 64\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"category-container\",\n          className: \"right-column bottom-shadow\",\n          children: /*#__PURE__*/_jsxDEV(CategoryTags, {\n            taskMap: taskMap,\n            onClick: handleCategoryClick,\n            isHighContrast: isHighContrast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          taskMap: taskMap,\n          isHighContrast: isHighContrast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"title-bar\",\n        className: \"title-bar py-2\",\n        style: {\n          borderBottom: highContrastBorder\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          role: \"banner\",\n          className: \"title-bar-text ml-3\",\n          children: \"Network Playbook for Azure Machine Learning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"auto\"\n          },\n          className: \"d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            \"aria-label\": \"Export\",\n            onClick: () => setShowExportForm(true),\n            className: \"blue-button mr-3\",\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExportDialog, {\n          show: showExportForm,\n          onClose: () => setShowExportForm(false),\n          onCsvExport: handleAdoExport,\n          onGithubExport: () => setShowGithubForm(true),\n          onPdfExport: () => window.print(),\n          onLinkExport: () => setShowLinkDialog(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LinkDialog, {\n          show: showLinkDialog,\n          onClose: () => setShowLinkDialog(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"two-column-grid\",\n        className: \"two-column-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          role: \"main\",\n          className: \"left-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"my-3 column-header side-padding\",\n            children: instructionHeader\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this), isNullOrEmpty(instructionsMsg) ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 48\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 normal-text\",\n            \"aria-label\": \"survey instructions\",\n            dangerouslySetInnerHTML: {\n              __html: instructionsMsg\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 57\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"survey-buttons\",\n            className: \"bottom-shadow side-padding\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              \"aria-label\": \"Restart\",\n              onClick: handleClear,\n              className: \"blue-button\",\n              children: \"Restart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              \"aria-label\": \"Undo\",\n              onClick: handleUndo,\n              disabled: undoStack.length === 0,\n              className: \"blue-button ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(BsArrowCounterclockwise, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 125\n              }, this), \" Undo\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-3 scroll-pane\",\n            children: /*#__PURE__*/_jsxDEV(Survey, {\n              json: surveyData,\n              onAfterRenderPage: handleAfterRender,\n              onValueChanged: handleValueChanged\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-row align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"my-3 column-header side-padding\",\n              children: scenarioHeader\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"total-scenarios-label\",\n              style: {\n                marginLeft: \"auto\"\n              },\n              children: \"Total scenarios:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"circle-text circle-text-large\",\n              \"aria-labelledby\": \"total-scenarios-label\",\n              style: {\n                border: highContrastBorder\n              },\n              children: numTasks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), isNullOrEmpty(scenarioMsg) ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 normal-text\",\n            dangerouslySetInnerHTML: {\n              __html: scenarioMsg\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"category-container\",\n            className: \"bottom-shadow side-padding\",\n            children: /*#__PURE__*/_jsxDEV(CategoryTags, {\n              taskMap: taskMap,\n              onClick: handleCategoryClick,\n              isHighContrast: isHighContrast\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scroll-pane side-padding\",\n            children: /*#__PURE__*/_jsxDEV(TaskList, {\n              taskMap: taskMap,\n              isHighContrast: isHighContrast\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GithubExportForm, {\n        taskMap: taskMap,\n        numTasks: numTasks,\n        showForm: showGithubForm,\n        onClose: () => setShowGithubForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        role: \"contentinfo\",\n        id: \"footer\",\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mx-3\",\n          children: \"Copyright \\xA9 Microsoft Corporation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n          style: {\n            marginLeft: \"auto\",\n            marginRight: \"1em\",\n            marginBottom: \"0px\",\n            display: \"inline-block\",\n            fontStyle: \"normal\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"mailto:aiguidelines@microsoft.com\",\n            children: \"Contact us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(App, \"AJgsoA0E2MitPwSfom7258U03Kk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/keonabut/code/azureml-network-playbook/src/App.tsx"],"names":["React","useEffect","useState","Survey","Intro","TaskList","CategoryTags","TaskCard","GithubExportForm","ExportDialog","LinkDialog","BsArrowCounterclockwise","BsChevronLeft","BsChevronRight","saveAs","getCategorySectionId","isNullOrEmpty","surveyModel","isFirstRender","isDeserializing","autoscroll","createTaskMap","contentData","questions","getAllQuestions","taskMap","Map","forEach","q","tc","fromQuestionChoice","name","value","category","find","cq","categoryTasks","get","filtered","filter","t","question","push","set","isWideScreen","window","innerWidth","arrangeSurveyPages","surveyData","isMobileLayout","surveyQuestions","i","pages","length","page","j","elements","adjustVerticalAlignment","categoryDiv","document","getElementById","buttonDiv","style","minHeight","clientHeight","heightDiff","matches","paddingBottom","match","pb","parseInt","App","showIntro","setShowIntro","showSurvey","setShowSurvey","undoStack","setUndoStack","Array","showExportForm","setShowExportForm","showLinkDialog","setShowLinkDialog","showGithubForm","setShowGithubForm","isHighContrast","setHighContrast","setMobileLayout","console","log","deserializeState","state","regex","test","error","valueMap","numQuestions","charAt","choiceIx","choices","questionName","firstUndoStack","serializeState","values","getAllValues","serialized","found","k","handleAfterRender","sender","options","urlParams","URLSearchParams","location","search","handleValueChanged","isVisible","clearValue","url","URL","toString","searchParams","history","replaceState","countPreview","classList","add","setTimeout","remove","handleUndo","pop","oldState","handleClear","handleCategoryClick","categorySection","scrollIntoView","focus","leftColumnBg","getComputedStyle","getElementsByClassName","getPropertyValue","titleBar","viewScenariosBar","surveyContainer","height","offsetHeight","scenarioContainer","footer","grid","svRows","handleResize","handleKeyPress","handleMouseClick","addEventListener","cleanup","removeEventListener","data","introduction","instructionHeader","surveyInstructions","title","instructionsMsg","message","scenarioHeader","taskInstructions","scenarioMsg","categories","from","keys","highContrastBorder","numTasks","map","filterTasks","flat","card","tasks","reduce","prev","n","handleAdoExport","csv","taskCards","task","replaceAll","details","blob","Blob","type","borderBottom","marginLeft","color","border","fontSize","paddingRight","paddingLeft","paddingTop","lineHeight","print","padding","marginBottom","display","fontWeight","__html","marginRight","fontStyle"],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// The App component is the top-level component of the application.\n// This component manages the state of the survey and determines\n// which page to show based on the status of the survey.\n\nimport React, { useEffect, useState } from 'react';\nimport { ReactSurveyModel, Survey } from 'survey-react';\nimport Intro from './components/Intro';\nimport TaskList from './components/TaskList';\nimport CategoryTags from './components/CategoryTags';\nimport { TaskCard } from './models/Types';\nimport { SurveyValueChangedOptions } from './models/SurveyCallbackTypes';\nimport GithubExportForm from './components/GithubExportForm';\nimport ExportDialog from './components/ExportDialog';\nimport LinkDialog from './components/LinkDialog';\nimport { BsArrowCounterclockwise, BsChevronLeft, BsChevronRight } from 'react-icons/bs';\nimport { saveAs } from 'file-saver';\nimport { getCategorySectionId, isNullOrEmpty } from './util/Utils';\n\ninterface AppProps {\n  surveyData: any,\n  contentData: any\n}\n\n// Captures the survey model object after the page renders\n// Exposes some encapsulated state needed for undo functionality\nexport let surveyModel: ReactSurveyModel;\n\n// SurveyJS will re-render its component when pages are changed or when the\n// app switches from mobile to desktop view. Some things need to only happen\n// on the first render.\nlet isFirstRender = true;\nlet isDeserializing = false;\nlet autoscroll = true;\n\nfunction createTaskMap(contentData: any) {\n  const questions = surveyModel?.getAllQuestions() ?? [];\n  const taskMap = new Map<string, TaskCard[]>();\n  questions.forEach(q => {\n    const tc = TaskCard.fromQuestionChoice(q.name, q.value);\n    if (tc != null) {\n      const category: any = contentData.questions.find((cq: any) => cq.name === q.name)?.category;\n      let categoryTasks = taskMap.get(category);\n      if (categoryTasks) {\n        const filtered = categoryTasks.filter((t: TaskCard) => t.question !== q.name);\n        filtered.push(tc);\n        categoryTasks = filtered;\n      } else {\n        categoryTasks = [tc];\n      }\n      taskMap.set(category, categoryTasks);\n    }\n  });\n  return taskMap;\n}\n\nfunction isWideScreen() {\n  return window.innerWidth > 425;\n}\n\n// Switches the survey to multi-page or single-page format\n// eslint-disable-next-line\nfunction arrangeSurveyPages(surveyData: any, isMobileLayout: boolean) {\n  const surveyQuestions = [];\n  for (let i = 0; i < surveyData.pages?.length; i++) {\n    const page = surveyData.pages[i];\n    for (let j = 0; j < page.elements?.length; j++) {\n      surveyQuestions.push(page.elements[j]);\n    }\n  }\n  surveyData.pages = [];\n  if (isMobileLayout) {\n    // Split the survey into multiple pages\n    for (let q of surveyQuestions) {\n      surveyData.pages.push({ elements: [q] });\n    }\n  } else {\n    // Combine all pages into 1 page\n    surveyData.pages.push({ elements: surveyQuestions });\n  }\n  return surveyData;\n}\n\n// vertically align the button row with the category tags row\nfunction adjustVerticalAlignment() {\n  const categoryDiv = document.getElementById(\"category-container\");\n  const buttonDiv = document.getElementById(\"survey-buttons\");\n  if (categoryDiv && buttonDiv) {\n    if (isNullOrEmpty(categoryDiv.style.minHeight)) {\n      categoryDiv.style.minHeight = `${buttonDiv.clientHeight}px`;\n    }\n    const heightDiff = categoryDiv.clientHeight - buttonDiv.clientHeight;\n    // parse the padding - it will be in format of \"5px\"\n    const matches = buttonDiv.style.paddingBottom?.match(/[0-9]+/);\n    const pb = matches == null ? 0 : parseInt(matches[0]);\n\n    if (heightDiff !== 0) {\n      buttonDiv.style.paddingBottom = `${pb + heightDiff}px`;\n    }\n  }\n}\n\nconst App: React.FunctionComponent<AppProps> = ({ surveyData, contentData }) => {\n  const [showIntro, setShowIntro] = useState(true);\n  const [showSurvey, setShowSurvey] = useState(true);\n  const [undoStack, setUndoStack] = useState(new Array<Map<string, string>>());\n  const [showExportForm, setShowExportForm] = useState(false);\n  const [showLinkDialog, setShowLinkDialog] = useState(false);\n  const [showGithubForm, setShowGithubForm] = useState(false);\n  const [isHighContrast, setHighContrast] = useState(false);\n  const [isMobileLayout, setMobileLayout] = useState(!isWideScreen());\n\n  console.log(\"STATE: showIntro=\", showIntro, \" showSurvey=\", showSurvey,\n    \" isMobileLayout=\", isMobileLayout, \" isHighContrast=\", isHighContrast);\n\n  //surveyData = arrangeSurveyPages(surveyData, isMobileLayout);\n\n  const deserializeState = (state: string) => {\n    console.log(\"Deserializing state: \", state);\n    let regex = /^[0-9x]*$/g;\n    if (!regex.test(state)) {\n      console.error(\"Unsupported state string: \", state);\n      return;\n    }\n\n    const questions = surveyModel.getAllQuestions();\n    if (state.length !== questions.length) {\n      console.error(\"State string length != number of questions\");\n      return;\n    }\n\n    const valueMap = new Map<string, string>();\n    let numQuestions = 0;\n    isDeserializing = true;\n    for (let i = 0; i < surveyData.pages?.length; i++) {\n      const page = surveyData.pages[i];\n      for (let j = 0; j < page.elements?.length; j++) {\n        numQuestions++;\n        if (numQuestions > state.length) {\n          console.error(\"survey.json contains more questions than state\");\n          isDeserializing = false;\n          return;\n        }\n        if (state.charAt(j) === \"x\") {\n          continue;\n        }\n        const choiceIx = parseInt(state.charAt(j));\n        const value = page.elements[j].choices[choiceIx]?.value;\n        const questionName = page.elements[j].name;\n        if (value) {\n          valueMap.set(questionName, value);\n        } else {\n          console.error(`Choice not found for state index=${j}`);\n          isDeserializing = false;\n          return;\n        }\n      }\n    }\n\n    questions.forEach(q => {\n      q.value = valueMap.get(q.name);\n    });\n    if (isFirstRender) {\n      // Set the undo stack up if the page is loading from a saved state\n      let valueMap = new Map<string, string>();\n      let firstUndoStack: Map<string, string>[] = []\n      questions.forEach(q => {\n        if (q.value) {\n          valueMap = new Map<string, string>(valueMap);\n          valueMap.set(q.name, q.value);\n          firstUndoStack = [...firstUndoStack, valueMap];\n        }\n      });\n      setUndoStack(firstUndoStack);\n    }\n    isDeserializing = false;\n    console.log(\"Deserialization successful\", valueMap);\n  }\n\n  const serializeState = () => {\n    if (surveyModel == null) {\n      console.log(\"Can't serialize: surveyModel is undefined\");\n      return \"\";\n    }\n\n    // Values is a map of {questionName: questionValue}\n    const values = surveyModel.getAllValues();\n    let serialized = \"\";\n    for (let i = 0; i < surveyData.pages?.length; i++) {\n      let page = surveyData.pages[i];\n      for (let j = 0; j < page.elements?.length; j++) {\n        let choices = page.elements[j].choices;\n        let questionName = page.elements[j].name;\n        let found = false;\n        for (let k = 0; k < choices?.length && !found; k++) {\n          if (values[questionName] === choices[k].value) {\n            serialized += k;\n            found = true;\n          }\n        }\n        if (!found) {\n          serialized += \"x\";\n        }\n      }\n    }\n\n    console.log(\"Serialized state: \", serialized);\n    return serialized;\n  }\n\n  const handleAfterRender = (sender: ReactSurveyModel, options: any) => {\n    console.log(\"AfterRender\", sender, options);\n    surveyModel = sender;\n    const urlParams = new URLSearchParams(window.location.search);\n    const state = urlParams.get('state');\n    if (state) {\n      deserializeState(state);\n    }\n    isFirstRender = false;\n  }\n\n  const handleValueChanged = (sender: ReactSurveyModel, options: SurveyValueChangedOptions) => {\n    if (isDeserializing) {\n      return;\n    }\n    console.log(\"ValueChanged\", sender, options);\n    const questions = sender.getAllQuestions();\n    const valueMap = new Map<string, string>();\n    questions.forEach(q => {\n      // Clear answers from invisible questions\n      // Questions can become invisible when the user changes a previous selection\n      if (!q.isVisible) {\n        q.clearValue();\n      }\n      valueMap.set(q.name, q.value);\n    });\n    setUndoStack([...undoStack, valueMap]);\n\n    const url = new URL(window.location.toString());\n    url.searchParams.set(\"state\", serializeState());\n    window.history.replaceState({}, '', url.toString());\n\n    const countPreview = document.getElementById(\"scenario-count-preview\");\n    if (countPreview) {\n      countPreview.classList.add(\"pulse-animation\")\n      setTimeout(() => {\n        countPreview.classList.remove(\"pulse-animation\");\n      }, 1500)\n    }\n  }\n\n  const handleUndo = () => {\n    if (surveyModel == null) {\n      console.log(\"Can't undo: surveyModel is undefined\");\n      return;\n    }\n\n    const questions = surveyModel.getAllQuestions();\n    questions.forEach(q => {\n      q.clearValue();\n    });\n\n    if (undoStack.length > 1) {\n      // The last thing pushed on the stack is the current state\n      // We need to pop it off first to get the old state\n      undoStack.pop();\n      const oldState = undoStack[undoStack.length - 1];\n      questions.forEach(q => {\n        q.value = oldState?.get(q.name);\n      });\n      setUndoStack([...undoStack]);\n    } else {\n      setUndoStack([]);\n    }\n  }\n\n  const handleClear = () => {\n    if (surveyModel == null) {\n      console.log(\"Can't clear: surveyModel is undefined\");\n      return;\n    }\n\n    const questions = surveyModel.getAllQuestions();\n    questions.forEach(q => {\n      q.clearValue();\n    });\n  }\n\n  const handleCategoryClick = (category: string) => {\n    const categorySection = document.getElementById(getCategorySectionId(category))\n    if (categorySection) {\n      categorySection.scrollIntoView(true);\n      categorySection.focus();\n    }\n  }\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    if (showIntro) return;\n\n    // Detect high contrast mode by checking if the background color has been modified\n    if (!isHighContrast) {\n      const leftColumnBg = window.getComputedStyle(document.getElementsByClassName(\"title-bar\")[0], null).getPropertyValue('background-color'); \n      if (leftColumnBg !== \"rgb(0, 27, 46)\") {\n        setHighContrast(true);\n      }\n    }\n\n    // Resize the page to fill the screen vertically\n    const titleBar = document.getElementById(\"title-bar\");\n    if (isMobileLayout) {\n      const viewScenariosBar = document.getElementById(\"view-scenarios-bar\");\n      const surveyContainer = document.getElementById(\"survey-container\");\n      if (surveyContainer) {\n        if (viewScenariosBar) {\n          surveyContainer.style.height = `calc(100vh - ${titleBar?.offsetHeight}px - ${viewScenariosBar?.offsetHeight}px)`;\n        } else {\n          surveyContainer.style.height = `calc(100vh - ${titleBar?.offsetHeight}px)`;\n        }\n      }\n\n      const scenarioContainer = document.getElementById(\"scenario-header-container\");\n      if (scenarioContainer) {\n        scenarioContainer.style.height = \"\";\n      }\n    } else {\n      const footer = document.getElementById(\"footer\");\n      const grid = document.getElementById(\"two-column-grid\");\n      if (grid) {\n        grid.style.height = `calc(100vh - ${footer?.offsetHeight}px - ${titleBar?.offsetHeight}px)`;\n      }\n      adjustVerticalAlignment();\n    }\n\n    // Auto-scroll when the user selects a choice\n    if (autoscroll) {\n      const svRows = document.getElementsByClassName(\"sv_row\");\n      if (svRows.length > 0) {\n        svRows[svRows.length - 1].scrollIntoView(true);\n      }\n    }\n\n    const handleResize = () => {\n      if (isMobileLayout && isWideScreen()) {\n        console.log(\"Switching to desktop layout\");\n        setMobileLayout(false);\n      } else if (!isMobileLayout && !isWideScreen()) {\n        console.log(\"Switching to mobile layout\");\n        setMobileLayout(true);\n      } else if (!isMobileLayout) {\n        adjustVerticalAlignment();\n      }\n    }\n\n    const handleKeyPress = () => {\n      autoscroll = false;\n    }\n\n    const handleMouseClick = () => {\n      autoscroll = true;\n    }\n\n    window.addEventListener('resize', handleResize);\n    document.addEventListener('keypress', handleKeyPress);\n    document.addEventListener('mousedown', handleMouseClick);\n    return function cleanup() {\n      window.removeEventListener('resize', handleResize);\n      document.removeEventListener('keypress', handleKeyPress);\n      document.removeEventListener('mousedown', handleMouseClick);\n    };\n  });\n\n  if (showIntro) {\n    // Only show intro page if introduction message is defined\n    const data: any = contentData;\n    if (data.introduction == null || data.introduction.length === 0) {\n      setShowIntro(false);\n    } else {\n      return (\n        <div className=\"row justify-content-center\">\n          <Intro introduction={data.introduction} onStartClick={() => setShowIntro(false)} />\n        </div>\n      );\n    }\n  }\n\n  const taskMap = createTaskMap(contentData);\n  const instructionHeader = contentData.surveyInstructions?.title;\n  const instructionsMsg = contentData.surveyInstructions?.message;\n  const scenarioHeader = contentData.taskInstructions?.title;\n  const scenarioMsg = contentData.taskInstructions?.message;\n  const categories = Array.from(taskMap.keys());\n  const highContrastBorder = isHighContrast ? \"solid white 1px\" : \"\";\n  const numTasks = categories.length === 0 ? 0 :\n    categories.map(category => TaskCard.filterTasks(taskMap.get(category) ?? []))\n      .flat()\n      .map(card => card.tasks)\n      .map(tasks => tasks.length)\n      .reduce((prev, n) => prev + n);\n\n  const handleAdoExport = () => {\n    let csv = \"Work Item Type,Title,Description\\n\";\n    for (const category of categories) {\n      const taskCards = taskMap.get(category) ?? [];\n      for (const card of taskCards) {\n        for (const task of card.tasks) {\n          // In CSV, quotation marks are escaped with 2 quotation marks\n          // e.g. \"Hello World\" => \"\"Hello World\"\"\n          const name = task.name.replaceAll(/\"/g, \"\\\"\\\"\");\n          const details = task.details.replaceAll(/\"/g, \"\\\"\\\"\");\n          csv += `\"Issue\",\"${category}: ${name}\",\"${details}\"\\n`;\n        }\n      }\n    }\n    const blob = new Blob([csv], { type: \"text/csv\" });\n    saveAs(blob, \"azureDevOps.csv\");\n  }\n\n  if (isMobileLayout) {\n    return (\n      <div>\n        { showSurvey ?\n          <div className=\"mobile-grid\">\n            <div id=\"title-bar\" className=\"title-bar\" style={{borderBottom: highContrastBorder}}>\n              <header role=\"banner\" className=\"title-bar-text\">Network Playbook for Azure Machine Learning</header>\n              <div id=\"survey-buttons\" style={{ marginLeft: \"auto\" }} className=\"d-flex justify-content-end\">\n                <button aria-label=\"Restart\" onClick={handleClear} className=\"blue-button\">Restart</button>\n                <button aria-label=\"Undo\" onClick={handleUndo} disabled={undoStack.length === 0} className=\"blue-button ml-3\"><BsArrowCounterclockwise /> Undo</button>\n              </div>\n            </div>\n            { numTasks > 0 ? \n            <button onClick={() => setShowSurvey(false)} className=\"view-scenarios-bar\" id=\"view-scenarios-bar\">\n              <span style={{ color: \"white\" }}>View testing scenarios</span>\n              <div className=\"circle-text circle-text-large\" id=\"scenario-count-preview\" style={{border: highContrastBorder}}>\n                {numTasks}\n              </div>\n              <BsChevronRight color={isHighContrast ? \"#FFFFFF\" : \"#708491\"} style={{ marginLeft: \"auto\", fontSize: \"24px\", paddingRight: \"2%\" }} />\n            </button>\n            : <div></div> }\n            <div className=\"left-column scroll-pane\" id=\"survey-container\">\n              <div className=\"column-header\">\n                <span style={{ paddingLeft: \"4%\", paddingTop: \"16px\", fontSize: \"22px\", lineHeight: \"26px\", color: \"#ACDEFB\" }}>{instructionHeader}</span>\n              </div>\n              <Survey json={surveyData} onAfterRenderPage={handleAfterRender} onValueChanged={handleValueChanged} />\n            </div>\n          </div>\n          :\n          <>\n            <div id=\"title-bar\" className=\"title-bar\" style={{borderBottom: highContrastBorder}}>\n              <header role=\"banner\" className=\"title-bar-text\">HAX Playbook</header>\n              <div style={{ marginLeft: \"auto\" }} className=\"d-flex justify-content-end\">\n                <button aria-label=\"Export\" onClick={() => { setShowExportForm(true) }} className=\"blue-button\">Export</button>\n                <ExportDialog \n                  show={showExportForm}\n                  onClose={() => setShowExportForm(false)}\n                  onCsvExport={handleAdoExport}\n                  onGithubExport={() => setShowGithubForm(true)}\n                  onPdfExport={() => window.print()}\n                  onLinkExport={() => setShowLinkDialog(true)}/>\n                <LinkDialog \n                  show={showLinkDialog}\n                  onClose={() => setShowLinkDialog(false)} />\n                <GithubExportForm taskMap={taskMap} numTasks={numTasks} showForm={showGithubForm} onClose={() => setShowGithubForm(false)} />\n              </div>\n            </div>\n            <button onClick={() => setShowSurvey(true)} className=\"back-bar\" style={{border: isHighContrast ? \"solid white 1px\" : \"\", marginLeft: \"15px\", padding: \"10px 0px\"}}>\n              <BsChevronLeft color={isHighContrast ? \"#FFFFFF\" : \"#004578\"} style={{ fontSize: \"18px\", marginBottom: \"2px\" }} />\n              <div style={{display: \"inline-block\", marginLeft: \"5px\"}}>Back to survey</div>\n            </button>\n            <div className=\"right-column d-flex flex-row align-items-center\" id=\"scenario-header-container\">\n              <div className=\"mb-3 column-header\" >\n                <span style={{fontSize: \"22px\", color:\"#004578\", fontWeight: \"bold\"}}>{scenarioHeader}</span>\n              </div>\n            </div>\n            <div className=\"right-column pb-4\">\n              <span style={{ fontSize: \"14px\", border: highContrastBorder}}>Total scenarios:</span>\n              <div className=\"circle-text circle-text-large\" style={{border: highContrastBorder}}>\n                {numTasks}\n              </div>\n            </div>\n            <div className=\"right-column\">\n              {scenarioMsg != null && scenarioMsg.length > 0 ? <div className=\"mb-3 normal-text\" dangerouslySetInnerHTML={{ __html: instructionsMsg }} /> : null}\n            </div>\n            <div id=\"category-container\" className=\"right-column bottom-shadow\">\n              <CategoryTags taskMap={taskMap} onClick={handleCategoryClick} isHighContrast={isHighContrast}/>\n            </div>\n            <TaskList taskMap={taskMap} isHighContrast={isHighContrast}/>\n          </>\n        }\n      </div>\n    );\n  } else {\n    return (\n      <>\n        <div id=\"title-bar\" className=\"title-bar py-2\" style={{borderBottom: highContrastBorder}}>\n          <header role=\"banner\" className=\"title-bar-text ml-3\">Network Playbook for Azure Machine Learning</header>\n          <div style={{ marginLeft: \"auto\" }} className=\"d-flex justify-content-end\">\n            <button aria-label=\"Export\" onClick={() => setShowExportForm(true)} className=\"blue-button mr-3\">Export</button>\n          </div>\n          <ExportDialog \n            show={showExportForm}\n            onClose={() => setShowExportForm(false)}\n            onCsvExport={handleAdoExport}\n            onGithubExport={() => setShowGithubForm(true)}\n            onPdfExport={() => window.print()}\n            onLinkExport={() => setShowLinkDialog(true)}/>\n          <LinkDialog \n            show={showLinkDialog}\n            onClose={() => setShowLinkDialog(false)} />\n        </div>\n        <div id=\"two-column-grid\" className=\"two-column-grid\">\n          <main role=\"main\" className=\"left-column\">\n            <h1 className=\"my-3 column-header side-padding\">\n              {instructionHeader}\n            </h1>\n            { isNullOrEmpty(instructionsMsg) ? <div/> : <div className=\"mb-3 normal-text\" aria-label=\"survey instructions\" dangerouslySetInnerHTML={{ __html: instructionsMsg }} /> }\n            <div id=\"survey-buttons\" className=\"bottom-shadow side-padding\">\n              <button aria-label=\"Restart\" onClick={handleClear} className=\"blue-button\">Restart</button>\n              <button aria-label=\"Undo\" onClick={handleUndo} disabled={undoStack.length === 0} className=\"blue-button ml-3\"><BsArrowCounterclockwise /> Undo</button>\n            </div>\n            <div className=\"pt-3 scroll-pane\">\n              <Survey json={surveyData} onAfterRenderPage={handleAfterRender} onValueChanged={handleValueChanged} />\n            </div>\n          </main>\n          <div className=\"right-column\">\n            <div className=\"d-flex flex-row align-items-center\">\n              <h1 className=\"my-3 column-header side-padding\">\n                {scenarioHeader}\n              </h1>\n              <span id=\"total-scenarios-label\" style={{ marginLeft: \"auto\" }}>Total scenarios:</span>\n              <div className=\"circle-text circle-text-large\" aria-labelledby=\"total-scenarios-label\" style={{border: highContrastBorder}}>\n                {numTasks}\n              </div>\n            </div>\n            { isNullOrEmpty(scenarioMsg) ? <div/> : <div className=\"mb-3 normal-text\" dangerouslySetInnerHTML={{ __html: scenarioMsg }} /> }\n            <div id=\"category-container\" className=\"bottom-shadow side-padding\">\n              <CategoryTags taskMap={taskMap} onClick={handleCategoryClick} isHighContrast={isHighContrast}/>\n            </div>\n            <div className=\"scroll-pane side-padding\">\n              <TaskList taskMap={taskMap} isHighContrast={isHighContrast}/>\n            </div>\n          </div>\n        </div>\n        <GithubExportForm taskMap={taskMap} numTasks={numTasks} showForm={showGithubForm} onClose={() => setShowGithubForm(false)} />\n        <footer role=\"contentinfo\" id=\"footer\" className=\"footer\">\n          <span className=\"mx-3\">Copyright &copy; Microsoft Corporation</span>\n          <address style={{ marginLeft: \"auto\", marginRight: \"1em\", marginBottom: \"0px\", display: \"inline-block\", fontStyle: \"normal\" }}>\n            <a href=\"mailto:aiguidelines@microsoft.com\">Contact us</a>\n          </address>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}