{"ast":null,"code":"var VERSION = \"1.0.3\";\n/**\n * @param octokit Octokit instance\n * @param options Options passed to Octokit constructor\n */\n\nfunction requestLog(octokit) {\n  octokit.hook.wrap(\"request\", function (request, options) {\n    octokit.log.debug(\"request\", options);\n    var start = Date.now();\n    var requestOptions = octokit.request.endpoint.parse(options);\n    var path = requestOptions.url.replace(options.baseUrl, \"\");\n    return request(options).then(function (response) {\n      octokit.log.info(\"\".concat(requestOptions.method, \" \").concat(path, \" - \").concat(response.status, \" in \").concat(Date.now() - start, \"ms\"));\n      return response;\n    }).catch(function (error) {\n      octokit.log.info(\"\".concat(requestOptions.method, \" \").concat(path, \" - \").concat(error.status, \" in \").concat(Date.now() - start, \"ms\"));\n      throw error;\n    });\n  });\n}\n\nrequestLog.VERSION = VERSION;\nexport { requestLog };","map":{"version":3,"sources":["../dist-src/version.js","../dist-src/index.js"],"names":[],"mappings":"AAAO,IAAM,OAAO,GAAG,OAAhB;ACCP;AACA;AACA;AACA;;AACO,SAAS,UAAT,CAAoB,OAApB,EAA6B;AAChC,EAAA,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,SAAlB,EAA6B,UAAC,OAAD,EAAU,OAAV,EAAsB;AAC/C,IAAA,OAAO,CAAC,GAAR,CAAY,KAAZ,CAAkB,SAAlB,EAA6B,OAA7B;AACA,QAAM,KAAK,GAAG,IAAI,CAAC,GAAL,EAAd;AACA,QAAM,cAAc,GAAG,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAyB,KAAzB,CAA+B,OAA/B,CAAvB;AACA,QAAM,IAAI,GAAG,cAAc,CAAC,GAAf,CAAmB,OAAnB,CAA2B,OAAO,CAAC,OAAnC,EAA4C,EAA5C,CAAb;AACA,WAAO,OAAO,CAAC,OAAD,CAAP,CACF,IADE,CACG,UAAC,QAAD,EAAc;AACpB,MAAA,OAAO,CAAC,GAAR,CAAY,IAAZ,WAAoB,cAAc,CAAC,MAAnC,cAA6C,IAA7C,gBAAuD,QAAQ,CAAC,MAAhE,iBAA6E,IAAI,CAAC,GAAL,KAAa,KAA1F;AACA,aAAO,QAAP;AACH,KAJM,EAKF,KALE,CAKI,UAAC,KAAD,EAAW;AAClB,MAAA,OAAO,CAAC,GAAR,CAAY,IAAZ,WAAoB,cAAc,CAAC,MAAnC,cAA6C,IAA7C,gBAAuD,KAAK,CAAC,MAA7D,iBAA0E,IAAI,CAAC,GAAL,KAAa,KAAvF;AACA,YAAM,KAAN;AACH,KARM,CAAP;AASH,GAdD;AAeH;;AACD,UAAU,CAAC,OAAX,GAAqB,OAArB","sourcesContent":["export const VERSION = \"1.0.3\";\n","import { VERSION } from \"./version\";\n/**\n * @param octokit Octokit instance\n * @param options Options passed to Octokit constructor\n */\nexport function requestLog(octokit) {\n    octokit.hook.wrap(\"request\", (request, options) => {\n        octokit.log.debug(\"request\", options);\n        const start = Date.now();\n        const requestOptions = octokit.request.endpoint.parse(options);\n        const path = requestOptions.url.replace(options.baseUrl, \"\");\n        return request(options)\n            .then((response) => {\n            octokit.log.info(`${requestOptions.method} ${path} - ${response.status} in ${Date.now() - start}ms`);\n            return response;\n        })\n            .catch((error) => {\n            octokit.log.info(`${requestOptions.method} ${path} - ${error.status} in ${Date.now() - start}ms`);\n            throw error;\n        });\n    });\n}\nrequestLog.VERSION = VERSION;\n"]},"metadata":{},"sourceType":"module"}