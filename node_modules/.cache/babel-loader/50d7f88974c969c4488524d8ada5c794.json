{"ast":null,"code":"var _jsxFileName = \"/Users/keonabut/code/azureml-network-playbook/src/components/CategoryTags.tsx\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// This component renders the card for a task\nimport React from 'react';\nimport { TaskCard } from '../models/Types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CategoryTags = ({\n  taskMap,\n  onClick,\n  isHighContrast\n}) => {\n  const categories = Array.from(taskMap.keys());\n  const highContrastBorder = isHighContrast ? \"solid white 1px\" : \"\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: categories.map(category => {\n      var _taskMap$get, _tasks$map$reduce;\n\n      const tasks = TaskCard.filterTasks((_taskMap$get = taskMap.get(category)) !== null && _taskMap$get !== void 0 ? _taskMap$get : []);\n      const numTasks = (_tasks$map$reduce = tasks.map(task => task.tasks.length).reduce((prev, n) => prev + n)) !== null && _tasks$map$reduce !== void 0 ? _tasks$map$reduce : 0;\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": `Go to ${category} scenarios`,\n        className: \"category-tag\",\n        onClick: () => onClick(category),\n        style: {\n          border: highContrastBorder\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\",\n            marginTop: \"-5px\"\n          },\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle-text circle-text-small\",\n          \"aria-label\": `Number of ${category} scenarios`,\n          style: {\n            border: highContrastBorder\n          },\n          children: numTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_c = CategoryTags;\nexport default CategoryTags;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryTags\");","map":{"version":3,"sources":["/Users/keonabut/code/azureml-network-playbook/src/components/CategoryTags.tsx"],"names":["React","TaskCard","CategoryTags","taskMap","onClick","isHighContrast","categories","Array","from","keys","highContrastBorder","map","category","tasks","filterTasks","get","numTasks","task","length","reduce","prev","n","border","display","marginTop"],"mappings":";AAAA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;;;AAQA,MAAMC,YAAwD,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA;AAApB,CAAD,KAA0C;AACzG,QAAMC,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWL,OAAO,CAACM,IAAR,EAAX,CAAnB;AACA,QAAMC,kBAAkB,GAAGL,cAAc,GAAG,iBAAH,GAAuB,EAAhE;AACA,sBACE;AAAA,cACGC,UAAU,CAACK,GAAX,CAAeC,QAAQ,IAAI;AAAA;;AAC1B,YAAMC,KAAK,GAAGZ,QAAQ,CAACa,WAAT,iBAAqBX,OAAO,CAACY,GAAR,CAAYH,QAAZ,CAArB,uDAA8C,EAA9C,CAAd;AACA,YAAMI,QAAQ,wBAAGH,KAAK,CAACF,GAAN,CAAUM,IAAI,IAAIA,IAAI,CAACJ,KAAL,CAAWK,MAA7B,EAAqCC,MAArC,CAA4C,CAACC,IAAD,EAAOC,CAAP,KAAaD,IAAI,GAAGC,CAAhE,CAAH,iEAAyE,CAAvF;AACA,0BACE;AAAQ,sBAAa,SAAQT,QAAS,YAAtC;AAAmD,QAAA,SAAS,EAAC,cAA7D;AAA4E,QAAA,OAAO,EAAE,MAAMR,OAAO,CAACQ,QAAD,CAAlG;AAA8G,QAAA,KAAK,EAAE;AAACU,UAAAA,MAAM,EAAEZ;AAAT,SAArH;AAAA,gCACE;AAAK,UAAA,KAAK,EAAE;AAACa,YAAAA,OAAO,EAAE,cAAV;AAA0BC,YAAAA,SAAS,EAAE;AAArC,WAAZ;AAAA,oBAA2DZ;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,+BAAf;AAA+C,wBAAa,aAAYA,QAAS,YAAjF;AAA8F,UAAA,KAAK,EAAE;AAACU,YAAAA,MAAM,EAAEZ;AAAT,WAArG;AAAA,oBAAoIM;AAApI;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KATA;AADH,mBADF;AAcD,CAjBD;;KAAMd,Y;AAmBN,eAAeA,YAAf","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// This component renders the card for a task\n\nimport React from 'react'\nimport { TaskCard } from '../models/Types';\n\ninterface CategoryTagsProps {\n  taskMap: Map<string, TaskCard[]>,\n  onClick: (category: string) => void,\n  isHighContrast: boolean\n}\n\nconst CategoryTags: React.FunctionComponent<CategoryTagsProps> = ({ taskMap, onClick, isHighContrast }) => {\n  const categories = Array.from(taskMap.keys());\n  const highContrastBorder = isHighContrast ? \"solid white 1px\" : \"\";\n  return (\n    <>\n      {categories.map(category => {\n        const tasks = TaskCard.filterTasks(taskMap.get(category) ?? []);\n        const numTasks = tasks.map(task => task.tasks.length).reduce((prev, n) => prev + n) ?? 0;\n        return (\n          <button aria-label={`Go to ${category} scenarios`} className=\"category-tag\" onClick={() => onClick(category)} style={{border: highContrastBorder}}>\n            <div style={{display: \"inline-block\", marginTop: \"-5px\"}}>{category}</div>\n            <div className=\"circle-text circle-text-small\" aria-label={`Number of ${category} scenarios`} style={{border: highContrastBorder}}>{numTasks}</div>\n          </button>\n        )\n      })}\n    </>\n  )\n}\n\nexport default CategoryTags;"]},"metadata":{},"sourceType":"module"}