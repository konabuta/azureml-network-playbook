{"ast":null,"code":"import _classCallCheck from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport { request } from '@octokit/request';\nimport { getUserAgent } from 'universal-user-agent';\nvar VERSION = \"4.6.0\";\n\nvar GraphqlError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphqlError, _Error);\n\n  var _super = _createSuper(GraphqlError);\n\n  function GraphqlError(request, response) {\n    var _this;\n\n    _classCallCheck(this, GraphqlError);\n\n    var message = response.data.errors[0].message;\n    _this = _super.call(this, message);\n    Object.assign(_assertThisInitialized(_this), response.data);\n    Object.assign(_assertThisInitialized(_this), {\n      headers: response.headers\n    });\n    _this.name = \"GraphqlError\";\n    _this.request = request; // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);\n    }\n\n    return _this;\n  }\n\n  return GraphqlError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar NON_VARIABLE_OPTIONS = [\"method\", \"baseUrl\", \"url\", \"headers\", \"request\", \"query\", \"mediaType\"];\nvar GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\n\nfunction graphql(request, query, options) {\n  if (typeof query === \"string\" && options && \"query\" in options) {\n    return Promise.reject(new Error(\"[@octokit/graphql] \\\"query\\\" cannot be used as variable name\"));\n  }\n\n  var parsedOptions = typeof query === \"string\" ? Object.assign({\n    query: query\n  }, options) : query;\n  var requestOptions = Object.keys(parsedOptions).reduce(function (result, key) {\n    if (NON_VARIABLE_OPTIONS.includes(key)) {\n      result[key] = parsedOptions[key];\n      return result;\n    }\n\n    if (!result.variables) {\n      result.variables = {};\n    }\n\n    result.variables[key] = parsedOptions[key];\n    return result;\n  }, {}); // workaround for GitHub Enterprise baseUrl set with /api/v3 suffix\n  // https://github.com/octokit/auth-app.js/issues/111#issuecomment-657610451\n\n  var baseUrl = parsedOptions.baseUrl || request.endpoint.DEFAULTS.baseUrl;\n\n  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n  }\n\n  return request(requestOptions).then(function (response) {\n    if (response.data.errors) {\n      var headers = {};\n\n      for (var _i = 0, _Object$keys = Object.keys(response.headers); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n        headers[key] = response.headers[key];\n      }\n\n      throw new GraphqlError(requestOptions, {\n        headers: headers,\n        data: response.data\n      });\n    }\n\n    return response.data.data;\n  });\n}\n\nfunction withDefaults(request$1, newDefaults) {\n  var newRequest = request$1.defaults(newDefaults);\n\n  var newApi = function newApi(query, options) {\n    return graphql(newRequest, query, options);\n  };\n\n  return Object.assign(newApi, {\n    defaults: withDefaults.bind(null, newRequest),\n    endpoint: request.endpoint\n  });\n}\n\nvar graphql$1 = withDefaults(request, {\n  headers: {\n    \"user-agent\": \"octokit-graphql.js/\".concat(VERSION, \" \").concat(getUserAgent())\n  },\n  method: \"POST\",\n  url: \"/graphql\"\n});\n\nfunction withCustomRequest(customRequest) {\n  return withDefaults(customRequest, {\n    method: \"POST\",\n    url: \"/graphql\"\n  });\n}\n\nexport { graphql$1 as graphql, withCustomRequest };","map":{"version":3,"sources":["../dist-src/version.js","../dist-src/error.js","../dist-src/graphql.js","../dist-src/with-defaults.js","../dist-src/index.js"],"names":["request","Request","graphql"],"mappings":";;;;;;;AAAO,IAAM,OAAO,GAAG,OAAhB;;ICAM,Y;;;;;AACT,wBAAY,OAAZ,EAAqB,QAArB,EAA+B;AAAA;;AAAA;;AAC3B,QAAM,OAAO,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAd,CAAqB,CAArB,EAAwB,OAAxC;AACA,8BAAM,OAAN;AACA,IAAA,MAAM,CAAC,MAAP,gCAAoB,QAAQ,CAAC,IAA7B;AACA,IAAA,MAAM,CAAC,MAAP,gCAAoB;AAAE,MAAA,OAAO,EAAE,QAAQ,CAAC;AAApB,KAApB;AACA,UAAK,IAAL,GAAY,cAAZ;AACA,UAAK,OAAL,GAAe,OAAf,CAN2B,CAOnC;;AACA;;AACQ,QAAI,KAAK,CAAC,iBAAV,EAA6B;AACzB,MAAA,KAAK,CAAC,iBAAN,gCAA8B,MAAK,WAAnC;AACH;;AAX0B;AAY9B;;;iCAb6B,K;;ACClC,IAAM,oBAAoB,GAAG,CACzB,QADyB,EAEzB,SAFyB,EAGzB,KAHyB,EAIzB,SAJyB,EAKzB,SALyB,EAMzB,OANyB,EAOzB,WAPyB,CAA7B;AASA,IAAM,oBAAoB,GAAG,eAA7B;;AACO,SAAS,OAAT,CAAiB,OAAjB,EAA0B,KAA1B,EAAiC,OAAjC,EAA0C;AAC7C,MAAI,OAAO,KAAP,KAAiB,QAAjB,IAA6B,OAA7B,IAAwC,WAAW,OAAvD,EAAgE;AAC5D,WAAO,OAAO,CAAC,MAAR,CAAe,IAAI,KAAJ,gEAAf,CAAP;AACH;;AACD,MAAM,aAAa,GAAG,OAAO,KAAP,KAAiB,QAAjB,GAA4B,MAAM,CAAC,MAAP,CAAc;AAAE,IAAA,KAAK,EAAL;AAAF,GAAd,EAAyB,OAAzB,CAA5B,GAAgE,KAAtF;AACA,MAAM,cAAc,GAAG,MAAM,CAAC,IAAP,CAAY,aAAZ,EAA2B,MAA3B,CAAkC,UAAC,MAAD,EAAS,GAAT,EAAiB;AACtE,QAAI,oBAAoB,CAAC,QAArB,CAA8B,GAA9B,CAAJ,EAAwC;AACpC,MAAA,MAAM,CAAC,GAAD,CAAN,GAAc,aAAa,CAAC,GAAD,CAA3B;AACA,aAAO,MAAP;AACH;;AACD,QAAI,CAAC,MAAM,CAAC,SAAZ,EAAuB;AACnB,MAAA,MAAM,CAAC,SAAP,GAAmB,EAAnB;AACH;;AACD,IAAA,MAAM,CAAC,SAAP,CAAiB,GAAjB,IAAwB,aAAa,CAAC,GAAD,CAArC;AACA,WAAO,MAAP;AACH,GAVsB,EAUpB,EAVoB,CAAvB,CAL6C,CAgBjD;AACA;;AACI,MAAM,OAAO,GAAG,aAAa,CAAC,OAAd,IAAyB,OAAO,CAAC,QAAR,CAAiB,QAAjB,CAA0B,OAAnE;;AACA,MAAI,oBAAoB,CAAC,IAArB,CAA0B,OAA1B,CAAJ,EAAwC;AACpC,IAAA,cAAc,CAAC,GAAf,GAAqB,OAAO,CAAC,OAAR,CAAgB,oBAAhB,EAAsC,cAAtC,CAArB;AACH;;AACD,SAAO,OAAO,CAAC,cAAD,CAAP,CAAwB,IAAxB,CAA6B,UAAC,QAAD,EAAc;AAC9C,QAAI,QAAQ,CAAC,IAAT,CAAc,MAAlB,EAA0B;AACtB,UAAM,OAAO,GAAG,EAAhB;;AACA,sCAAkB,MAAM,CAAC,IAAP,CAAY,QAAQ,CAAC,OAArB,CAAlB,kCAAiD;AAA5C,YAAM,GAAG,mBAAT;AACD,QAAA,OAAO,CAAC,GAAD,CAAP,GAAe,QAAQ,CAAC,OAAT,CAAiB,GAAjB,CAAf;AACH;;AACD,YAAM,IAAI,YAAJ,CAAiB,cAAjB,EAAiC;AACnC,QAAA,OAAO,EAAP,OADmC;AAEnC,QAAA,IAAI,EAAE,QAAQ,CAAC;AAFoB,OAAjC,CAAN;AAIH;;AACD,WAAO,QAAQ,CAAC,IAAT,CAAc,IAArB;AACH,GAZM,CAAP;AAaH;;AC5CM,SAAS,YAAT,CAAsBA,SAAtB,EAA+B,WAA/B,EAA4C;AAC/C,MAAM,UAAU,GAAGA,SAAO,CAAC,QAARA,CAAiB,WAAjBA,CAAnB;;AACA,MAAM,MAAM,GAAG,SAAT,MAAS,CAAC,KAAD,EAAQ,OAAR,EAAoB;AAC/B,WAAO,OAAO,CAAC,UAAD,EAAa,KAAb,EAAoB,OAApB,CAAd;AACH,GAFD;;AAGA,SAAO,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB;AACzB,IAAA,QAAQ,EAAE,YAAY,CAAC,IAAb,CAAkB,IAAlB,EAAwB,UAAxB,CADe;AAEzB,IAAA,QAAQ,EAAEC,OAAO,CAAC;AAFO,GAAtB,CAAP;AAIH;;ACPW,IAACC,SAAO,GAAG,YAAY,CAAC,OAAD,EAAU;AACzC,EAAA,OAAO,EAAE;AACL,+CAAoC,OAApC,cAA+C,YAAY,EAA3D;AADK,GADgC;AAIzC,EAAA,MAAM,EAAE,MAJiC;AAKzC,EAAA,GAAG,EAAE;AALoC,CAAV,CAAvB;;AAOL,SAAS,iBAAT,CAA2B,aAA3B,EAA0C;AAC7C,SAAO,YAAY,CAAC,aAAD,EAAgB;AAC/B,IAAA,MAAM,EAAE,MADuB;AAE/B,IAAA,GAAG,EAAE;AAF0B,GAAhB,CAAnB;AAIH","sourcesContent":["export const VERSION = \"4.6.0\";\n","export class GraphqlError extends Error {\n    constructor(request, response) {\n        const message = response.data.errors[0].message;\n        super(message);\n        Object.assign(this, response.data);\n        Object.assign(this, { headers: response.headers });\n        this.name = \"GraphqlError\";\n        this.request = request;\n        // Maintains proper stack trace (only available on V8)\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\n","import { GraphqlError } from \"./error\";\nconst NON_VARIABLE_OPTIONS = [\n    \"method\",\n    \"baseUrl\",\n    \"url\",\n    \"headers\",\n    \"request\",\n    \"query\",\n    \"mediaType\",\n];\nconst GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nexport function graphql(request, query, options) {\n    if (typeof query === \"string\" && options && \"query\" in options) {\n        return Promise.reject(new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`));\n    }\n    const parsedOptions = typeof query === \"string\" ? Object.assign({ query }, options) : query;\n    const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {\n        if (NON_VARIABLE_OPTIONS.includes(key)) {\n            result[key] = parsedOptions[key];\n            return result;\n        }\n        if (!result.variables) {\n            result.variables = {};\n        }\n        result.variables[key] = parsedOptions[key];\n        return result;\n    }, {});\n    // workaround for GitHub Enterprise baseUrl set with /api/v3 suffix\n    // https://github.com/octokit/auth-app.js/issues/111#issuecomment-657610451\n    const baseUrl = parsedOptions.baseUrl || request.endpoint.DEFAULTS.baseUrl;\n    if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n        requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n    }\n    return request(requestOptions).then((response) => {\n        if (response.data.errors) {\n            const headers = {};\n            for (const key of Object.keys(response.headers)) {\n                headers[key] = response.headers[key];\n            }\n            throw new GraphqlError(requestOptions, {\n                headers,\n                data: response.data,\n            });\n        }\n        return response.data.data;\n    });\n}\n","import { request as Request } from \"@octokit/request\";\nimport { graphql } from \"./graphql\";\nexport function withDefaults(request, newDefaults) {\n    const newRequest = request.defaults(newDefaults);\n    const newApi = (query, options) => {\n        return graphql(newRequest, query, options);\n    };\n    return Object.assign(newApi, {\n        defaults: withDefaults.bind(null, newRequest),\n        endpoint: Request.endpoint,\n    });\n}\n","import { request } from \"@octokit/request\";\nimport { getUserAgent } from \"universal-user-agent\";\nimport { VERSION } from \"./version\";\nimport { withDefaults } from \"./with-defaults\";\nexport const graphql = withDefaults(request, {\n    headers: {\n        \"user-agent\": `octokit-graphql.js/${VERSION} ${getUserAgent()}`,\n    },\n    method: \"POST\",\n    url: \"/graphql\",\n});\nexport function withCustomRequest(customRequest) {\n    return withDefaults(customRequest, {\n        method: \"POST\",\n        url: \"/graphql\",\n    });\n}\n"]},"metadata":{},"sourceType":"module"}