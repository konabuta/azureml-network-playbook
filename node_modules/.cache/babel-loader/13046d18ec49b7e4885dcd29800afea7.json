{"ast":null,"code":"import _classCallCheck from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"/home/runner/work/azureml-network-playbook/azureml-network-playbook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport { Deprecation } from 'deprecation';\nimport once from 'once';\nvar logOnce = once(function (deprecation) {\n  return console.warn(deprecation);\n});\n/**\n * Error with extra properties to help with debugging\n */\n\nvar RequestError = /*#__PURE__*/function (_Error) {\n  _inherits(RequestError, _Error);\n\n  var _super = _createSuper(RequestError);\n\n  function RequestError(message, statusCode, options) {\n    var _this;\n\n    _classCallCheck(this, RequestError);\n\n    _this = _super.call(this, message); // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);\n    }\n\n    _this.name = \"HttpError\";\n    _this.status = statusCode;\n    Object.defineProperty(_assertThisInitialized(_this), \"code\", {\n      get: function get() {\n        logOnce(new Deprecation(\"[@octokit/request-error] `error.code` is deprecated, use `error.status`.\"));\n        return statusCode;\n      }\n    });\n    _this.headers = options.headers || {}; // redact request credentials without mutating original request options\n\n    var requestCopy = Object.assign({}, options.request);\n\n    if (options.request.headers.authorization) {\n      requestCopy.headers = Object.assign({}, options.request.headers, {\n        authorization: options.request.headers.authorization.replace(/ .*$/, \" [REDACTED]\")\n      });\n    }\n\n    requestCopy.url = requestCopy.url // client_id & client_secret can be passed as URL query parameters to increase rate limit\n    // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications\n    .replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\") // OAuth tokens can be passed as URL query parameters, although it is not recommended\n    // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header\n    .replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n    _this.request = requestCopy;\n    return _this;\n  }\n\n  return RequestError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexport { RequestError };","map":{"version":3,"sources":["../dist-src/index.js"],"names":[],"mappings":";;;;;;;AAEA,IAAM,OAAO,GAAG,IAAI,CAAC,UAAC,WAAD;AAAA,SAAiB,OAAO,CAAC,IAAR,CAAa,WAAb,CAAjB;AAAA,CAAD,CAApB;AACA;AACA;AACA;;IACa,Y;;;;;AACT,wBAAY,OAAZ,EAAqB,UAArB,EAAiC,OAAjC,EAA0C;AAAA;;AAAA;;AACtC,8BAAM,OAAN,EADsC,CAE9C;;AACA;;AACQ,QAAI,KAAK,CAAC,iBAAV,EAA6B;AACzB,MAAA,KAAK,CAAC,iBAAN,gCAA8B,MAAK,WAAnC;AACH;;AACD,UAAK,IAAL,GAAY,WAAZ;AACA,UAAK,MAAL,GAAc,UAAd;AACA,IAAA,MAAM,CAAC,cAAP,gCAA4B,MAA5B,EAAoC;AAChC,MAAA,GADgC,iBAC1B;AACF,QAAA,OAAO,CAAC,IAAI,WAAJ,CAAgB,0EAAhB,CAAD,CAAP;AACA,eAAO,UAAP;AACH;AAJ+B,KAApC;AAMA,UAAK,OAAL,GAAe,OAAO,CAAC,OAAR,IAAmB,EAAlC,CAfsC,CAgB9C;;AACQ,QAAM,WAAW,GAAG,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,OAAO,CAAC,OAA1B,CAApB;;AACA,QAAI,OAAO,CAAC,OAAR,CAAgB,OAAhB,CAAwB,aAA5B,EAA2C;AACvC,MAAA,WAAW,CAAC,OAAZ,GAAsB,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,OAAO,CAAC,OAAR,CAAgB,OAAlC,EAA2C;AAC7D,QAAA,aAAa,EAAE,OAAO,CAAC,OAAR,CAAgB,OAAhB,CAAwB,aAAxB,CAAsC,OAAtC,CAA8C,MAA9C,EAAsD,aAAtD;AAD8C,OAA3C,CAAtB;AAGH;;AACD,IAAA,WAAW,CAAC,GAAZ,GAAkB,WAAW,CAAC,GAAZ,CAC1B;AACA;AAF0B,KAGb,OAHa,CAGL,sBAHK,EAGmB,0BAHnB,EAI1B;AACA;AAL0B,KAMb,OANa,CAML,qBANK,EAMkB,yBANlB,CAAlB;AAOA,UAAK,OAAL,GAAe,WAAf;AA9BsC;AA+BzC;;;iCAhC6B,K","sourcesContent":["import { Deprecation } from \"deprecation\";\nimport once from \"once\";\nconst logOnce = once((deprecation) => console.warn(deprecation));\n/**\n * Error with extra properties to help with debugging\n */\nexport class RequestError extends Error {\n    constructor(message, statusCode, options) {\n        super(message);\n        // Maintains proper stack trace (only available on V8)\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        this.name = \"HttpError\";\n        this.status = statusCode;\n        Object.defineProperty(this, \"code\", {\n            get() {\n                logOnce(new Deprecation(\"[@octokit/request-error] `error.code` is deprecated, use `error.status`.\"));\n                return statusCode;\n            },\n        });\n        this.headers = options.headers || {};\n        // redact request credentials without mutating original request options\n        const requestCopy = Object.assign({}, options.request);\n        if (options.request.headers.authorization) {\n            requestCopy.headers = Object.assign({}, options.request.headers, {\n                authorization: options.request.headers.authorization.replace(/ .*$/, \" [REDACTED]\"),\n            });\n        }\n        requestCopy.url = requestCopy.url\n            // client_id & client_secret can be passed as URL query parameters to increase rate limit\n            // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications\n            .replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\")\n            // OAuth tokens can be passed as URL query parameters, although it is not recommended\n            // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header\n            .replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n        this.request = requestCopy;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}