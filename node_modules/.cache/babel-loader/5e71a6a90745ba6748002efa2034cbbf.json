{"ast":null,"code":"var _jsxFileName = \"/Users/keonabut/code/azureml-network-playbook/src/components/Help.tsx\",\n    _s = $RefreshSig$();\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// This component renders the help cards shown below the survey\nimport * as React from 'react';\nimport { useId } from '@fluentui/react-hooks';\nimport { getTheme, mergeStyleSets, FontWeights, Modal, IconButton } from '@fluentui/react';\nimport { surveyModel } from '../App';\nimport { ConditionRunner } from 'survey-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cancelIcon = {\n  iconName: 'Cancel'\n};\n\nfunction filterExamples(examples) {\n  if (surveyModel) {\n    const values = surveyModel.getAllValues();\n    const properties = surveyModel.getFilteredProperties();\n    return examples.filter(ex => {\n      var _ex$visibleIf;\n\n      return new ConditionRunner((_ex$visibleIf = ex.visibleIf) !== null && _ex$visibleIf !== void 0 ? _ex$visibleIf : \"true\").run(values, properties);\n    });\n  } else {\n    console.log(\"Could not filter examples because surveyModel is null\");\n    return examples;\n  }\n}\n\nexport const HelpDialog = ({\n  name,\n  examples,\n  show,\n  onClose\n}) => {\n  _s();\n\n  // Use useId() to ensure that the IDs are unique on the page.\n  const titleId = useId('title');\n  const visibleExamples = filterExamples(examples);\n  console.debug(`Filtered ${visibleExamples.length} visible examples out of ${examples.length} total examples for help=${name}`);\n  const body = visibleExamples === null || visibleExamples === void 0 ? void 0 : visibleExamples.map((example, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: example.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: example.details\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), i < visibleExamples.length - 1 ? /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          width: \"100%\",\n          marginTop: \"1.5em\",\n          marginBottom: \"1.5em\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 42\n      }, this) : null]\n    }, example.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      titleAriaId: titleId,\n      isOpen: show,\n      onDismiss: onClose,\n      isBlocking: false,\n      containerClassName: contentStyles.container,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: contentStyles.header,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: titleId,\n            children: [name, \" - Examples\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            styles: iconButtonStyles,\n            iconProps: cancelIcon,\n            ariaLabel: \"Close popup modal\",\n            onClick: onClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: contentStyles.body,\n          children: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}; // Fluent UI theme setup\n\n_s(HelpDialog, \"NDoDTbO7NND5BSV8uErVhNjxj+4=\", false, function () {\n  return [useId];\n});\n\n_c = HelpDialog;\nconst theme = getTheme();\nconst contentStyles = mergeStyleSets({\n  container: {\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    alignItems: 'stretch'\n  },\n  header: [theme.fonts.xLargePlus, {\n    flex: '1 1 auto',\n    borderTop: `4px solid ${theme.palette.themePrimary}`,\n    color: theme.palette.neutralPrimary,\n    display: 'flex',\n    alignItems: 'center',\n    fontWeight: FontWeights.semibold,\n    padding: '12px 12px 14px 24px'\n  }],\n  body: {\n    flex: '4 4 auto',\n    padding: '0 24px 24px 24px',\n    overflowY: 'hidden',\n    selectors: {\n      p: {\n        margin: '14px 0'\n      },\n      'p:first-child': {\n        marginTop: 0\n      },\n      'p:last-child': {\n        marginBottom: 0\n      }\n    }\n  }\n});\nconst iconButtonStyles = {\n  root: {\n    color: theme.palette.neutralPrimary,\n    marginLeft: 'auto',\n    marginTop: '4px',\n    marginRight: '2px'\n  },\n  rootHovered: {\n    color: theme.palette.neutralDark\n  }\n};\nexport default HelpDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"HelpDialog\");","map":{"version":3,"sources":["/Users/keonabut/code/azureml-network-playbook/src/components/Help.tsx"],"names":["React","useId","getTheme","mergeStyleSets","FontWeights","Modal","IconButton","surveyModel","ConditionRunner","cancelIcon","iconName","filterExamples","examples","values","getAllValues","properties","getFilteredProperties","filter","ex","visibleIf","run","console","log","HelpDialog","name","show","onClose","titleId","visibleExamples","debug","length","body","map","example","i","__html","details","width","marginTop","marginBottom","contentStyles","container","header","iconButtonStyles","theme","display","flexFlow","alignItems","fonts","xLargePlus","flex","borderTop","palette","themePrimary","color","neutralPrimary","fontWeight","semibold","padding","overflowY","selectors","p","margin","root","marginLeft","marginRight","rootHovered","neutralDark"],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// This component renders the help cards shown below the survey\n\nimport * as React from 'react';\nimport { useId } from '@fluentui/react-hooks';\nimport {\n  getTheme,\n  mergeStyleSets,\n  FontWeights,\n  Modal,\n  IconButton,\n  IIconProps,\n} from '@fluentui/react';\nimport { surveyModel } from '../App'\nimport { ConditionRunner } from 'survey-react'\n\ninterface HelpProps {\n  name: string,\n  examples: Array<any>\n  show: boolean,\n  onClose: () => void\n}\n\nconst cancelIcon: IIconProps = { iconName: 'Cancel' };\n\nfunction filterExamples(examples: Array<any>) {\n  if (surveyModel) {\n    const values = surveyModel.getAllValues();\n    const properties = surveyModel.getFilteredProperties();\n    return examples.filter(ex => new ConditionRunner(ex.visibleIf ?? \"true\").run(values, properties));\n  } else {\n    console.log(\"Could not filter examples because surveyModel is null\");\n    return examples;\n  }\n}\n\nexport const HelpDialog: React.FunctionComponent<HelpProps> = ({ name, examples, show, onClose }) => {\n\n  // Use useId() to ensure that the IDs are unique on the page.\n  const titleId = useId('title');\n\n  const visibleExamples = filterExamples(examples);\n  console.debug(`Filtered ${visibleExamples.length} visible examples out of ${examples.length} total examples for help=${name}`);\n  const body = visibleExamples?.map((example, i) => {\n    return (\n      <div key={example.name}>\n        <h5>{example.name}</h5>\n        <div dangerouslySetInnerHTML={{ __html: example.details }}></div>\n        {i < visibleExamples.length-1 ? (<hr style={{ width: \"100%\", marginTop: \"1.5em\", marginBottom: \"1.5em\" }}/>) : null}\n      </div>\n    )\n  });\n\n  return (\n    <div>\n      <Modal\n        titleAriaId={titleId}\n        isOpen={show}\n        onDismiss={onClose}\n        isBlocking={false}\n        containerClassName={contentStyles.container}\n      >\n        <section>\n          <header className={contentStyles.header}>\n            <h3 id={titleId}>{name} - Examples</h3>\n            <IconButton\n              styles={iconButtonStyles}\n              iconProps={cancelIcon}\n              ariaLabel=\"Close popup modal\"\n              onClick={onClose}\n            />\n          </header>\n          <div className={contentStyles.body}>\n            {body}\n          </div>\n        </section>\n      </Modal>\n    </div>\n  );\n};\n\n// Fluent UI theme setup\nconst theme = getTheme();\nconst contentStyles = mergeStyleSets({\n  container: {\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    alignItems: 'stretch',\n  },\n  header: [\n    theme.fonts.xLargePlus,\n    {\n      flex: '1 1 auto',\n      borderTop: `4px solid ${theme.palette.themePrimary}`,\n      color: theme.palette.neutralPrimary,\n      display: 'flex',\n      alignItems: 'center',\n      fontWeight: FontWeights.semibold,\n      padding: '12px 12px 14px 24px',\n    },\n  ],\n  body: {\n    flex: '4 4 auto',\n    padding: '0 24px 24px 24px',\n    overflowY: 'hidden',\n    selectors: {\n      p: { margin: '14px 0' },\n      'p:first-child': { marginTop: 0 },\n      'p:last-child': { marginBottom: 0 },\n    },\n  },\n});\nconst iconButtonStyles = {\n  root: {\n    color: theme.palette.neutralPrimary,\n    marginLeft: 'auto',\n    marginTop: '4px',\n    marginRight: '2px',\n  },\n  rootHovered: {\n    color: theme.palette.neutralDark,\n  },\n};\n\nexport default HelpDialog;"]},"metadata":{},"sourceType":"module"}